<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">
    <!--先定义所有的appender-->
    <!--appenders:定义输出内容,输出格式,输出方式,日志保存策略等,常用其下三种标签[console,File,RollingFile]-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--输出日志的格式-->
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" charset="UTF-8"/>
            <!--            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
            <!--            %d{HH:mm:ss.SSS} 表示输出到毫秒的时间-->
            <!--            %t 输出当前线程名称-->
            <!--            %-5level 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0-->
            <!--            %logger 输出logger名称，因为Root Logger没有名称，所以没有输出-->
            <!--            %msg 日志文本-->
            <!--            %n 换行-->

            <!--            其他常用的占位符有：-->
            <!--            %F 输出所在的类文件名，如Client.java-->
            <!--            %L 输出行号-->
            <!--            %M 输出所在方法名-->
            <!--            %l 输出语句所在的行数, 包括类名、方法名、文件名、行数-->
        </console>
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
<!--        <File name="log" fileName="log/test.log" append="false">-->
<!--            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>-->
<!--        </File>-->
<!--        &lt;!&ndash; 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档&ndash;&gt;-->
<!--        <RollingFile name="RollingFileInfo" fileName="${sys:user.home}/logs/info.log"-->
<!--                     filePattern="${sys:user.home}/logs/{date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">-->
<!--            &lt;!&ndash;控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）&ndash;&gt;-->
<!--            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>-->
<!--            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
<!--            <Policies>-->
<!--                <TimeBasedTriggeringPolicy/>-->
<!--                <SizeBasedTriggeringPolicy size="100 MB"/>-->
<!--            </Policies>-->
<!--        </RollingFile>-->
<!--        <RollingFile name="RollingFileWarn" fileName="${sys:user.home}/logs/warn.log"-->
<!--                     filePattern="${sys:user.home}/logs/{date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">-->
<!--            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>-->
<!--            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
<!--            <Policies>-->
<!--                <TimeBasedTriggeringPolicy/>-->
<!--                <SizeBasedTriggeringPolicy size="100 MB"/>-->
<!--            </Policies>-->
<!--            &lt;!&ndash; DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 &ndash;&gt;-->
<!--            <DefaultRolloverStrategy max="20"/>-->
<!--        </RollingFile>-->
<!--        <RollingFile name="RollingFileError" fileName="${sys:user.home}/logs/error.log"-->
<!--                     filePattern="${sys:user.home}/logs/{date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">-->
<!--            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>-->
<!--            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
<!--            <Policies>-->
<!--                <TimeBasedTriggeringPolicy/>-->
<!--                <SizeBasedTriggeringPolicy size="100 MB"/>-->
<!--            </Policies>-->
<!--        </RollingFile>-->
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!-- root logger 配置,全局配置，默认所有的Logger都继承此配置 -->
        <!-- AsyncRoot - 异步记录日志 - 需要LMAX Disruptor的支持 -->
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <!--Logger节点用来单独指定日志的形式，name为包路径,比如要为org.springframework包下所有日志指定为INFO级别等。 -->
        <logger name="org.springframework" level="INFO"/>
        <logger name="org.mybatis" level="INFO"/>
        <root level="info">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </root>
    </loggers>
</configuration>